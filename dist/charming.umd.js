(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :
  typeof define === 'function' && define.amd ? define(['exports'], factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.cm = {}));
})(this, (function (exports) { 'use strict';

  var _documentCurrentScript = typeof document !== 'undefined' ? document.currentScript : null;
  // For vite env.
  const isNode = typeof navigator === "undefined" ? true : false;

  const userAgent = isNode ? "node" : navigator.userAgent;

  const isFireFox = userAgent.includes("Firefox");

  const isLegacyEdge = userAgent.includes("Edge");

  // https://github.com/xtermjs/xterm.js/blob/096fe171356fc9519e0a6b737a98ca82d0587e91/src/browser/renderer/shared/Constants.ts#LL14C1-L14C1
  const TEXT_BASELINE = isFireFox || isLegacyEdge ? "bottom" : "ideographic";

  const CELL_SIZE$1 = 3;

  const TERMINAL_CLASS = "cell-terminal";

  // Default options from: https://github.com/xtermjs/xterm.js/blob/ac0207bf2e8a923d0cff95cc383f6f3e36a2e923/src/common/services/OptionsService.ts#LL12C1-L12C1
  function Terminal({
    document = window.document,
    mode = "single",
    cols = mode === "single" ? 80 : 40,
    rows = 24,
    fontFamily = "courier-new, courier, monospace",
    fontSize = 15,
    fontWeight = "normal",
    width,
    height,
  } = {}) {
    const {width: tw, height: th} = measureText("W", {
      fontSize,
      fontFamily,
      fontWeight,
    });
    const cellWidth = mode === "double" ? tw * 2 : tw;
    const cellHeight = th;
    const computedCols = dimensionOf(width, cols, cellWidth);
    const computedRows = dimensionOf(height, rows, cellHeight);
    const computedWidth = computedCols * cellWidth;
    const computedHeight = computedRows * cellHeight;
    const context = createContext(document, computedWidth, computedHeight);
    const buffer = Array.from({length: computedCols * computedRows}, () => null);
    context.canvas.classList.add(TERMINAL_CLASS);
    Object.defineProperties(this, {
      _mode: {value: mode},
      _fontSize: {value: fontSize},
      _fontFamily: {value: fontFamily},
      _fontWeight: {value: fontWeight},
      _cellWidth: {value: cellWidth},
      _cellHeight: {value: cellHeight},
      _cols: {value: computedCols},
      _rows: {value: computedRows},
      _width: {value: computedWidth},
      _height: {value: computedHeight},
      _context: {value: context},
      _buffer: {value: buffer},
    });
  }

  Object.defineProperties(Terminal.prototype, {
    background: {value: terminal$background, writable: true, configurable: true},
    char: {value: terminal$char, writable: true, configurable: true},
    toString: {value: terminal$toString, writable: true, configurable: true},
    node: {value: terminal$node, writable: true, configurable: true},
  });

  function terminal$background(color) {
    this._context.fillStyle = color;
    this._context.fillRect(0, 0, this._width, this._height);
    this._buffer.fill(null);
    return this;
  }

  function terminal$char(char, i, j, fg, bg, wide = false) {
    const x = this._cellWidth * i;
    const y = this._cellHeight * j;
    const index = (this._cols * j + i) * CELL_SIZE$1;

    if (bg) {
      this._context.fillStyle = bg;
      this._context.fillRect(x, y, this._cellWidth, this._cellHeight);
      this._buffer[index + 2] = bg;
    }

    if (fg) {
      this._context.fillStyle = fg;
      this._buffer[index + 1] = fg;
    }

    if (!char) return;
    this._context.font = `${this._fontWeight} ${this._fontSize}px ${this._fontFamily}`;
    this._context.textBaseline = TEXT_BASELINE;
    this._context.fillText(char, x, y + this._cellHeight);
    this._buffer[index] = char;

    if (this._mode !== "double" || wide) return;
    this._context.fillText(char, x + this._cellWidth / 2, y + this._cellHeight);
    this._buffer[index] += char;

    return this;
  }

  function terminal$toString() {
    let string = "";
    for (let j = 0; j < this._rows; j++) {
      if (j !== 0) string += "\n";
      for (let i = 0; i < this._cols; i++) {
        const index = (this._cols * j + i) * CELL_SIZE$1;
        const empty = this._mode === "double" ? "··" : "·";
        const char = this._buffer[index] || empty;
        string += char;
      }
    }
    return string;
  }

  function terminal$node() {
    return this._context.canvas;
  }

  function createContext(document, width = 640, height = 480, dpi = null) {
    if (dpi == null) dpi = devicePixelRatio;
    const canvas = document.createElement("canvas");
    canvas.width = width * dpi;
    canvas.height = height * dpi;
    canvas.style.width = width + "px";
    canvas.style.height = height + "px";
    const context = canvas.getContext("2d");
    context.scale(dpi, dpi);
    return context;
  }

  function measureText(text, styles) {
    const span = document.createElement("span");

    // Hide span.
    span.style.visibility = "hidden";
    span.style.position = "absolute";
    span.style.display = "inline-block";
    span.style.left = "-9999em";
    span.style.top = "0";
    span.style.lineHeight = "normal";
    span.setAttribute("aria-hidden", true);

    // Font attributes.
    span.style.fontSize = `${styles.fontSize}px`;
    span.style.fontFamily = styles.fontFamily;

    span.innerHTML = text;
    document.body.appendChild(span);

    const bbox = span.getBoundingClientRect();
    return {width: bbox.width, height: Math.ceil(bbox.height)};
  }

  function dimensionOf(pixel, count, unit) {
    if (pixel === undefined) return count;
    return (pixel / unit) | 0;
  }

  let wasm$1;

  const cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );

  if (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); }
  let cachedUint8Memory0 = null;

  function getUint8Memory0() {
      if (cachedUint8Memory0 === null || cachedUint8Memory0.byteLength === 0) {
          cachedUint8Memory0 = new Uint8Array(wasm$1.memory.buffer);
      }
      return cachedUint8Memory0;
  }

  function getStringFromWasm0(ptr, len) {
      ptr = ptr >>> 0;
      return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));
  }
  /**
  */
  class Renderer {

      static __wrap(ptr) {
          ptr = ptr >>> 0;
          const obj = Object.create(Renderer.prototype);
          obj.__wbg_ptr = ptr;

          return obj;
      }

      __destroy_into_raw() {
          const ptr = this.__wbg_ptr;
          this.__wbg_ptr = 0;

          return ptr;
      }

      free() {
          const ptr = this.__destroy_into_raw();
          wasm$1.__wbg_renderer_free(ptr);
      }
      /**
      * @param {number} ch
      * @param {number} ch1
      * @param {number} fg
      * @param {number} bg
      */
      stroke(ch, ch1, fg, bg) {
          wasm$1.renderer_stroke(this.__wbg_ptr, ch, ch1, fg, bg);
      }
      /**
      * @param {number} ch
      * @param {number} ch1
      * @param {number} fg
      * @param {number} bg
      */
      fill(ch, ch1, fg, bg) {
          wasm$1.renderer_fill(this.__wbg_ptr, ch, ch1, fg, bg);
      }
      /**
      * @param {number} ch
      * @param {number} ch1
      * @param {number} fg
      * @param {number} bg
      */
      background(ch, ch1, fg, bg) {
          wasm$1.renderer_background(this.__wbg_ptr, ch, ch1, fg, bg);
      }
      /**
      */
      noStroke() {
          wasm$1.renderer_noStroke(this.__wbg_ptr);
      }
      /**
      */
      noFill() {
          wasm$1.renderer_noFill(this.__wbg_ptr);
      }
      /**
      * @param {number} cols
      * @param {number} rows
      * @returns {Renderer}
      */
      static new(cols, rows) {
          const ret = wasm$1.renderer_new(cols, rows);
          return Renderer.__wrap(ret);
      }
      /**
      * @param {number} x
      * @param {number} y
      */
      translate(x, y) {
          wasm$1.renderer_translate(this.__wbg_ptr, x, y);
      }
      /**
      * @param {number} x
      * @param {number} y
      */
      scale(x, y) {
          wasm$1.renderer_scale(this.__wbg_ptr, x, y);
      }
      /**
      * @param {number} rad
      */
      rotate(rad) {
          wasm$1.renderer_rotate(this.__wbg_ptr, rad);
      }
      /**
      */
      pushMatrix() {
          wasm$1.renderer_pushMatrix(this.__wbg_ptr);
      }
      /**
      */
      popMatrix() {
          wasm$1.renderer_popMatrix(this.__wbg_ptr);
      }
      /**
      * @param {number} x
      * @param {number} y
      * @returns {number}
      */
      transform(x, y) {
          const ret = wasm$1.renderer_transform(this.__wbg_ptr, x, y);
          return ret;
      }
      /**
      * @returns {number}
      */
      render() {
          const ret = wasm$1.renderer_render(this.__wbg_ptr);
          return ret;
      }
      /**
      * @param {number} x
      * @param {number} y
      */
      point(x, y) {
          wasm$1.renderer_point(this.__wbg_ptr, x, y);
      }
      /**
      * @param {number} x
      * @param {number} y
      * @param {number} x1
      * @param {number} y1
      */
      line(x, y, x1, y1) {
          wasm$1.renderer_line(this.__wbg_ptr, x, y, x1, y1);
      }
      /**
      * @param {number} x
      * @param {number} y
      * @param {number} width
      * @param {number} height
      */
      rect(x, y, width, height) {
          wasm$1.renderer_rect(this.__wbg_ptr, x, y, width, height);
      }
  }

  async function __wbg_load(module, imports) {
      if (typeof Response === 'function' && module instanceof Response) {
          if (typeof WebAssembly.instantiateStreaming === 'function') {
              try {
                  return await WebAssembly.instantiateStreaming(module, imports);

              } catch (e) {
                  if (module.headers.get('Content-Type') != 'application/wasm') {
                      console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n", e);

                  } else {
                      throw e;
                  }
              }
          }

          const bytes = await module.arrayBuffer();
          return await WebAssembly.instantiate(bytes, imports);

      } else {
          const instance = await WebAssembly.instantiate(module, imports);

          if (instance instanceof WebAssembly.Instance) {
              return { instance, module };

          } else {
              return instance;
          }
      }
  }

  function __wbg_get_imports() {
      const imports = {};
      imports.wbg = {};
      imports.wbg.__wbindgen_throw = function(arg0, arg1) {
          throw new Error(getStringFromWasm0(arg0, arg1));
      };

      return imports;
  }

  function __wbg_finalize_init(instance, module) {
      wasm$1 = instance.exports;
      __wbg_init.__wbindgen_wasm_module = module;
      cachedUint8Memory0 = null;


      return wasm$1;
  }

  async function __wbg_init(input) {
      if (wasm$1 !== undefined) return wasm$1;

      if (typeof input === 'undefined') {
          input = new URL('index_bg.wasm', (typeof document === 'undefined' && typeof location === 'undefined' ? require('u' + 'rl').pathToFileURL(__filename).href : typeof document === 'undefined' ? location.href : (_documentCurrentScript && _documentCurrentScript.tagName.toUpperCase() === 'SCRIPT' && _documentCurrentScript.src || new URL('charming.umd.js', document.baseURI).href)));
      }
      const imports = __wbg_get_imports();

      if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {
          input = fetch(input);
      }

      const { instance, module } = await __wbg_load(await input, imports);

      return __wbg_finalize_init(instance, module);
  }

  function _loadWasmModule (sync, filepath, src, imports) {
    function _instantiateOrCompile(source, imports, stream) {
      var instantiateFunc = stream ? WebAssembly.instantiateStreaming : WebAssembly.instantiate;
      var compileFunc = stream ? WebAssembly.compileStreaming : WebAssembly.compile;

      if (imports) {
        return instantiateFunc(source, imports)
      } else {
        return compileFunc(source)
      }
    }

    
  var buf = null;
  var isNode = typeof process !== 'undefined' && process.versions != null && process.versions.node != null;
  if (isNode) {
    
  buf = Buffer.from(src, 'base64');

  } else {
    
  var raw = globalThis.atob(src);
  var rawLength = raw.length;
  buf = new Uint8Array(new ArrayBuffer(rawLength));
  for(var i = 0; i < rawLength; i++) {
     buf[i] = raw.charCodeAt(i);
  }

  }


    {
      return _instantiateOrCompile(buf, imports, false)
    }
  }

  function wasm(imports){return _loadWasmModule(0, null, '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AAAAAOBBY0UNASABqgwCCwJAIAVBFHYiBSABIAFEg8jJbTBf5D+iRAAAAAAAADhDoEQAAAAAAAA4w6AiI0QAAEBU+yH5v6KgIgEgI0QxY2IaYbTQPaIiJaEiJL1CNIinQf8PcWtBEUgNACAFIAEgI0QAAGAaYbTQPaIiJKEiIiAjRHNwAy6KGaM7oiABICKhICShoSIloSIkvUI0iKdB/w9xa0EySARAICIhAQwBCyAiICNEAAAALooZozuiIiShIgEgI0TBSSAlmoN7OaIgIiABoSAkoaEiJaEhJAsgACAkOQMAIAAgASAkoSAloTkDECAjRAAAAAAAAODBZiEFIABB/////wcCfyAjmUQAAAAAAADgQWMEQCAjqgwBC0GAgICAeAtBgICAgHggBRsgI0QAAMD////fQWQbQQAgIyAjYRs2AggMCAtBgICAgHgLQYCAgIB4IAQbIAFEAADA////30FkG0EAIAEgAWEbtyIiOQMAIAEgIqFEAAAAAAAAcEGiIgFEAAAAAAAA4MFmIQQgCkH/////BwJ/IAGZRAAAAAAAAOBBYwRAIAGqDAELQYCAgIB4C0GAgICAeCAEGyABRAAAwP///99BZBtBACABIAFhGyIEtyIiOQMIIAogASAioUQAAAAAAABwQaIiATkDECAKQgA3AyggCkIANwMgIApCADcDGCAKQRhqIRIjAEGwBGsiAyQAIANCADcDmAEgA0IANwOQASADQgA3A4gBIANCADcDgAEgA0IANwN4IANCADcDcCADQgA3A2ggA0IANwNgIANCADcDWCADQgA3A1AgA0IANwNIIANCADcDQCADQgA3AzggA0IANwMwIANCADcDKCADQgA3AyAgA0IANwMYIANCADcDECADQgA3AwggA0IANwMAIANCADcDuAIgA0IANwOwAiADQgA3A6gCIANCADcDoAIgA0IANwOYAiADQgA3A5ACIANCADcDiAIgA0IANwOAAiADQgA3A/gBIANCADcD8AEgA0IANwPoASADQgA3A+ABIANCADcD2AEgA0IANwPQASADQgA3A8gBIANCADcDwAEgA0IANwO4ASADQgA3A7ABIANCADcDqAEgA0IANwOgASADQgA3A9gDIANCADcD0AMgA0IANwPIAyADQgA3A8ADIANCADcDuAMgA0IANwOwAyADQgA3A6gDIANC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QCAJQQN0IANqQbgCaiECIAlBAnQgA2pB3ANqIQQDQCACIAFEAAAAAAAAcD6iIiIgBCgCALeiOQMAIAJBCGogASAEQQRqKAIAt6I5AwAgAkEQayECIARBCGshBCAiRAAAAAAAAHA+oiEBIAlBAUcgCUECayEJDQALCyAFQQFqIQwgA0HAAmogBUEDdGohByAFIQIDQAJAIAsgBSACIglrIgYgBiALSxsiCEUEQEEAIQREAAAAAAAAAAAhAQwBCyAIQQFqQX5xIQ5EAAAAAAAAAAAhAUEAIQJBACEEA0AgASACQaiNwABqKwMAIAIgB2oiDysDAKKgIAJBsI3AAGorAwAgD0EIaisDAKKgIQEgAkEQaiECIA4gBEECaiIERw0ACwsgA0GgAWogBkEDdGogCEEBcQR8IAEFIAEgBEEDdEGojcAAaisDACADQcACaiAEIAlqQQN0aisDAKKgCzkDACAHQQhrIQcgCUEBayECIAkNAAsCQCAMQQNxIglFBEBEAAAAAAAAAAAhASAFIQQMAQsgA0GgAWogBUEDdGohAkQAAAAAAAAAACEBIAUhBANAIARBAWshBCABIAIrAwCgIQEgAkEIayECIAlBAWsiCQ0ACwsgBUEDTwRAIARBA3QgA2pBiAFqIQIDQCABIAJBGGorAwCgIAJBEGorAwCgIAJBCGorAwCgIAIrAwCgIQEgAkEgayECIARBA0cgBEEEayEEDQALCyASIAGaIAEgDRs5AwAgAysDoAEgAaEhAQJAIAVFDQBBASECA0AgASADQaABaiACQQN0aisDAKAhASACIAVPDQEgAiACIAVJaiICIAVNDQALCyASIAGaIAEgDRs5AwggA0GwBGokACAQQQdxIQUgJkIAWQRAIAAgBTYCCCAAIAorAyA5AxAgACAKKwMYOQMADAcLIABBACAFazYCCCAAIAorAyCaOQMQIAAgCisDGJo5AwAMBgsgBUG9+9eABE8EQCAFQfvD5IAERgRAAkAgASABRIPIyW0wX+Q/okQAAAAAAAA4Q6BEAAAAAAAAOMOgIiNEAABAVPsh+b+ioCIBICNEMWNiGmG00D2iIiWhIiS9QoCAgICAgID4/wCDQv////////+HP1YNACABICNEAABgGmG00D2iIiShIiIgI0RzcAMuihmjO6IgASAioSAkoaEiJaEiJL1CgICAgICAgID/AINC//////////88VgRAICIhAQwBCyAiICNEAAAALooZozuiIiShIgEgI0TBSSAlmoN7OaIgIiABoSAkoaEiJaEhJAsgACAkOQMAIAAgASAkoSAloTkDECAjRAAAAAAAAODBZiEFIABB/////wcCfyAjmUQAAAAAAADgQWMEQCAjqgwBC0GAgICAeAtBgICAgHggBRsgI0QAAMD////fQWQbQQAgIyAjYRs2AggMBwsgJkIAWQRAIABBBDYCCCAAIAFEAABAVPshGcCgIgFEMWNiGmG08L2gIiI5AwAgACABICKhRDFjYhphtPC9oDkDEAwHCyAAQXw2AgggACABRAAAQFT7IRlAoCIBRDFjYhphtPA9oCIiOQMAIAAgASAioUQxY2IaYbTwPaA5AxAMBgsgBUH8ssuABEYNBCAmQgBZBEAgAEEDNgIIIAAgAUQAADB/fNkSwKAiAUTKlJOnkQ7pvaAiIjkDACAAIAEgIqFEypSTp5EO6b2gOQMQDAYLIABBfTYCCCAAIAFEAAAwf3zZEkCgIgFEypSTp5EO6T2gIiI5AwAgACABICKhRMqUk6eRDuk9oDkDEAwFCyAEQf//P3FB+8MkRg0CIAVB/bKLgARPBEAgJkIAWQRAIABBAjYCCCAAIAFEAABAVPshCcCgIgFEMWNiGmG04L2gIiI5AwAgACABICKhRDFjYhphtOC9oDkDEAwGCyAAQX42AgggACABRAAAQFT7IQlAoCIBRDFjYhphtOA9oCIiOQMAIAAgASAioUQxY2IaYbTgPaA5AxAMBQsgJkIAWQ0BIABBfzYCCCAAIAFEAABAVPsh+T+gIgFEMWNiGmG00D2gIiI5AwAgACABICKhRDFjYhphtNA9oDkDEAwECyAAQQA2AgggACABIAGhIgE5AxAgACABOQMADAMLIABBATYCCCAAIAFEAABAVPsh+b+gIgFEMWNiGmG00L2gIiI5AwAgACABICKhRDFjYhphtNC9oDkDEAwCCwJAIAVBFHYiBSABIAFEg8jJbTBf5D+iRAAAAAAAADhDoEQAAAAAAAA4w6AiI0QAAEBU+yH5v6KgIgEgI0QxY2IaYbTQPaIiJaEiJL1CNIinQf8PcWtBEUgNACAFIAEgI0QAAGAaYbTQPaIiJKEiIiAjRHNwAy6KGaM7oiABICKhICShoSIloSIkvUI0iKdB/w9xa0EySARAICIhAQwBCyAiICNEAAAALooZozuiIiShIgEgI0TBSSAlmoN7OaIgIiABoSAkoaEiJaEhJAsgACAkOQMAIAAgASAkoSAloTkDECAjRAAAAAAAAODBZiEFIABB/////wcCfyAjmUQAAAAAAADgQWMEQCAjqgwBC0GAgICAeAtBgICAgHggBRsgI0QAAMD////fQWQbQQAgIyAjYRs2AggMAQsCQCABIAFEg8jJbTBf5D+iRAAAAAAAADhDoEQAAAAAAAA4w6AiI0QAAEBU+yH5v6KgIgEgI0QxY2IaYbTQPaIiJaEiJL1CgICAgICAgPj/AINC/////////4c/Vg0AIAEgI0QAAGAaYbTQPaIiJKEiIiAjRHNwAy6KGaM7oiABICKhICShoSIloSIkvUKAgICAgICAgP8Ag0L//////////zxWBEAgIiEBDAELICIgI0QAAAAuihmjO6IiJKEiASAjRMFJICWag3s5oiAiIAGhICShoSIloSEkCyAAICQ5AwAgACABICShICWhOQMQICNEAAAAAAAA4MFmIQUgAEH/////BwJ/ICOZRAAAAAAAAOBBYwRAICOqDAELQYCAgIB4C0GAgICAeCAFGyAjRAAAwP///99BZBtBACAjICNhGzYCCAsgCkEwaiQAC54NAQ9/IwBBIGsiECQAAkAgAUEhSQRAIAAgASACIAMQBQwBCyACQQRrIRMCQAJAA0AgBEUEQCAAIAEgAiADQQEgBhAEDAQLIAAgAUEDdiIHQRxsaiEJIAAgB0EEdGohDSAEQQFrIQQgEAJ/IAFBwABPBEAgACANIAkgBxAdDAELIAAgCSANIAAoAgAiByANKAIAIg1IIgogDSAJKAIAIglIcxsgCiAHIAlIcxsLIhIoAgAiCzYCBCASIABrQQJ2IQ0CQAJAAkAgBQRAIAUoAgAgC04NAQsgASADSw0CQQAhCiAAIQcgAiABQQJ0IhRqIhEhCCANIQkDQCAAIAlBA2siD0EAIAkgD08bQQJ0aiIPIAdLBEADQCAKQQJ0IAIgCEEEayAHKAIAIgwgC0giDhtqIAw2AgAgCiAOaiIKQQJ0IAIgCEEIayAHQQRqKAIAIgwgC0giDhtqIAw2AgAgCiAOaiIKQQJ0IAIgCEEMayAHQQhqKAIAIgwgC0giDhtqIAw2AgAgCiAOaiIKQQJ0IAIgCEEQayIIIAdBDGooAgAiDCALSCIOG2ogDDYCACAKIA5qIQogB0EQaiIHIA9JDQALCyAAIAlBAnRqIg8gB0sEQANAIApBAnQgAiAIQQRrIgggBygCACIMIAtIIg4baiAMNgIAIAogDmohCiAHQQRqIgcgD0kNAAsLIAEgCUcEQCAIQQRrIgggCkECdGogBygCADYCACAHQQRqIQcgASEJDAELCyAAIAIgCkECdCIPEEYhDCABIAprIQ4CQCABIApGDQAgDkEDcSELQQAhCCAKIAFrQXxNBEAgDCAPaiEHIA5BfHEhFSATIBRqIQkDQCAHIAkoAgA2AgAgB0EEaiARIAhB/v///wNzQQJ0aigCADYCACAHQQhqIBEgCEH9////A3NBAnRqKAIANgIAIAdBDGogESAIQfz///8Dc0ECdGooAgA2AgAgCUEQayEJIAdBEGohByAVIAhBBGoiCEcNAAsLIAtFDQAgEyAUIAhBAnQiCWtqIQcgCSAMaiAPaiEIA0AgCCAHKAIANgIAIAdBBGshByAIQQRqIQggC0EBayILDQALCyAKRQ0AIAEgCk8NASAQQQA2AhggEEEBNgIMIBBB2ILAADYCCCAQQgQ3AhAgEEEIakHggsAAECYACyABIANLDQFBACEJIAAhByACIAFBAnQiD2oiESEIA0AgACANQQNrIgVBACAFIA1NG0ECdGoiCiAHSwRAIBIoAgAhBQNAIAlBAnQgAiAIQQRrIAUgBygCACILTiIMG2ogCzYCACAJIAxqIglBAnQgAiAIQQhrIAUgB0EEaigCACILTiIMG2ogCzYCACAJIAxqIglBAnQgAiAIQQxrIAUgB0EIaigCACILTiIMG2ogCzYCACAJIAxqIglBAnQgAiAIQRBrIgggBSAHQQxqKAIAIgtOIgwbaiALNgIAIAkgDGohCSAHQRBqIgcgCkkNAAsLIAAgDUECdGoiBSAHSwRAIBIoAgAhCgNAIAlBAnQgAiAIQQRrIgggCiAHKAIAIgtOIgwbaiALNgIAIAkgDGohCSAHQQRqIgcgBUkNAAsLIAEgDUcEQCACIAlBAnRqIAcoAgA2AgAgB0EEaiEHIAlBAWohCSAIQQRrIQggASENDAELCyAAIAIgCUECdCIAEEYhBSABIAlrIQoCQCABIAlGDQAgCkEDcSENQQAhCCAJIAFrQXxNBEAgACAFaiEHIApBfHEhEiAPIBNqIQsDQCAHIAsoAgA2AgAgB0EEaiARIAhB/v///wNzQQJ0aigCADYCACAHQQhqIBEgCEH9////A3NBAnRqKAIANgIAIAdBDGogESAIQfz///8Dc0ECdGooAgA2AgAgC0EQayELIAdBEGohByASIAhBBGoiCEcNAAsLIA1FDQAgEyAIQQJ0IghrIA9qIQcgBSAIaiAAaiEIA0AgCCAHKAIANgIAIAdBBGshByAIQQRqIQggDUEBayINDQALCyABIAlJDQMgACAFaiEAQQAhBSAKIgFBIU8NAgwECyAMIA9qIA4gAiADIAQgEEEEaiAGEAMgCiIBQSFPDQEMAwsLAAsjAEEwayIAJAAgACAJNgIAIAAgATYCBCAAQQI2AgwgAEH8isAANgIIIABCAjcCFCAAIABBBGqtQoCAgIAQhDcDKCAAIACtQoCAgIAQhDcDICAAIABBIGo2AhAgAEEIakHwgsAAECYACyAAIAogAiADEAULIBBBIGokAAuHCgISfwJ+IwBB0AJrIhEkAAJAIAFBAkkNACABrSIYQv//////////P3wgGIAhGQJ/IAFBgSBPBEBBAUEgIAFBAXJna0EBdiIHdCABIAd2akEBdgwBC0HAACABIAFBAXZrIgcgB0HAAE8bCyESIABBBGshFyAAQQhqIRZBASEMA0BBACETQQEhDSABIA9LBEAgACAPQQJ0aiENIA+tIhgCfwJAIAEgD2siBiASSQ0AAkAgBkECSQRAIAYhBwwBCwJ/AkACQCANKAIEIgkgDSgCAEgiEEUEQEECIQcgBkECRg0EIBYgD0ECdGohCgNAIAkgCigCACIJSg0DIApBBGohCiAGIAdBAWoiB0cNAAsMAQtBAiEHIAZBAkYEQEEBIQggDUEEagwDCyAWIA9BAnRqIQoDQCAJIAooAgAiCUwNAiAKQQRqIQogBiAHQQFqIgdHDQALCyAGIQcLIAcgEkkNAiAQRQ0BIAdBAkkEQEEBIQcMAgsgDSAHQQJ0aiAHQQF2IghBAnRrCyEOQQAhCiAIQQFHBEAgCEH+////B3EhFSAOIAhBAnRqQQRrIQkgDSEGA0AgCSgCACEQIAkgBigCADYCACAGIBA2AgAgDiAIIApB/v///wNzakECdGoiECgCACEUIBAgBkEEaiIQKAIANgIAIBAgFDYCACAJQQhrIQkgBkEIaiEGIBUgCkECaiIKRw0ACwsgCEEBcUUNACANIApBAnRqIgYoAgAhDSAGIA4gCCAKQX9zakECdGoiBigCADYCACAGIA02AgALIAdBAXRBAXIMAQsgEiAGIAYgEksbQQF0IARFDQAaIA1BICAGIAZBIE8bIgcgAiADQQBBACAFEAMgB0EBdEEBcgsiDUEBdiAPaq18IBl+IA8gDEEBdmutIBh8IBl+hXmnIRMLAkACQCALQQJJDQAgFyAPQQJ0IgdqIRAgACAHaiEVA0AgC0EBayIUIBFBjgJqai0AACATSQ0BAn8CQAJAAkAgAyARQQRqIBRBAnRqKAIAIgtBAXYiCCAMQQF2IgZqIgpPIAsgDHJBAXFFcUUEQCAAIA8gCmtBAnRqIQcgC0EBcUUEQCAHIAggAiADIAhBAXJnQQF0QT5zQQAgBRADCyAMQQFxRQRAIAcgCEECdGogBiACIAMgBkEBcmdBAXRBPnNBACAFEAMLIAxBAkkgC0ECSXINAyAGIAggBiAISSIJIgYbIg4gA0sNAyACIAcgCEECdGoiCyAHIAYbIA5BAnQiBhBGIgwgBmohBiAJBEAgECEJA0AgCSAGQQRrIgYoAgAiCCALQQRrIgsoAgAiDiAIIA5KGzYCACAGIAggDkhBAnRqIQYgCyAIIA5OQQJ0aiILIAdGDQMgCUEEayEJIAYgDEcNAAsMAgsgDkUNAgNAIAcgCygCACIIIAwoAgAiDiAIIA5IIgkbNgIAIAdBBGohByAMIAggDk5BAnRqIgwgBkYNAyALIAlBAnRqIgsgFUcNAAsMAgsgCkEBdAwDCyALIQcLIAcgDCAGIAxrEEYaCyAKQQF0QQFyCyEMQQEhBiAUIgtBAUsNAAsMAQsgCyEGCyARQY4CaiAGaiATOgAAIBFBBGogBkECdGogDDYCACABIA9LBEAgBkEBaiELIA1BAXYgD2ohDyANIQwMAQsLIAxBAXENACAAIAEgAiADIAFBAXJnQQF0QT5zQQAgBRADCyARQdACaiQAC4wIAQ1/IwBBEGsiDSQAAkAgAUECTwRAAn8CQCADIAFBEGpPBEAgAUEBdiEMIAFBD0sNASABQQdLBEAgAiAAQQhBDCAAKAIMIAAoAghIIgcbaiIFKAIAIgogACAAKAIEIgQgACgCACIDTkECdGoiCygCACIJIAkgCkgbNgIMIAIgAEEMQQggBxtqIggoAgAiByAAIAMgBEpBAnRqIgQoAgAiAyADIAdKIgcbNgIAIAIgBSALIAggBxsgCSAKSiIDGygCACIFIAQgCCALIAMbIAcbKAIAIgMgAyAFSBs2AgggAiAFIAMgAyAFShs2AgQgAiAMQQJ0IgNqIg4gACADaiIGQQhBDCAGKAIMIAYoAghIIgcbaiIFKAIAIgogBiAGKAIEIgQgBigCACIDTkECdGoiCygCACIJIAkgCkgbNgIMIA4gBkEMQQggBxtqIggoAgAiByAGIAMgBEpBAnRqIgQoAgAiAyADIAdKIgcbNgIAIA4gBSALIAggBxsgCSAKSiIDGygCACIFIAQgCCALIAMbIAcbKAIAIgMgAyAFShs2AgQgDiAFIAMgAyAFSBs2AghBBAwDCyACIAAoAgA2AgAgAiAMQQJ0IgNqIAAgA2ooAgA2AgBBAQwCCwALIAAgAiACIAFBAnRqIgQQBiAAIAxBAnQiA2ogAiADaiAEQSBqEAZBCAshBSANQQI2AgwgDSAMrUIghjcDACAFQQJ0IQcgASAMayEOQQAhA0ECIQYDQCANIANBAWoiBDYCCCADQQJ0IQggBCEDIA4gDCAIIA1qKAIAIgQbIgogBUsEQCACIARBAnQiA2ohDyAAIANqIQsgByEEIAUhCANAIA8gCEECdCIJaiIDIAkgC2ooAgAiEDYCACADQQRrKAIAIgYgEEoEQCAEIQMCfwNAIAMgD2oiCSAGNgIAIA8gA0EERg0BGiADQQRrIQMgECAJQQhrKAIAIgZIDQALIAMgD2oLIBA2AgALIARBBGohBCAIQQFqIgggCkcNAAsgDSgCDCEGIA0oAgghAwsgAyAGRw0ACyAAIAFBAnRBBGsiA2ohCCACIANqIQYgAiAMQQJ0aiIDQQRrIQQDQCAAIAMoAgAiCSACKAIAIgUgBSAJSiIHGzYCACAIIAYoAgAiCiAEKAIAIgsgCiALShs2AgAgCEEEayEIIABBBGohACAEQXxBACAKIAtIG2ohBCAGQXxBACAKIAtOG2ohBiACIAUgCUxBAnRqIQIgAyAHQQJ0aiEDIAxBAWsiDA0ACyAEQQRqIQQgAUEBcQR/IAAgAiADIAIgBEkiABsoAgA2AgAgAyACIARPQQJ0aiEDIAIgAEECdGoFIAILIARHIAMgBkEEakdyDQELIA1BEGokAA8LEDAAC6MGAQ1/IAAgACgCBCIGIAAoAgAiA0hBAnRqIgUgAEEMQQggACgCDCAAKAIISCIEG2oiByAAIAMgBkxBAnRqIgYgAEEIQQwgBBtqIgMoAgAgBigCAEgiBBsgBygCACIKIAUoAgAiC0giBRsiCCgCACEMIAMgBiAHIAUbIAQbIgkoAgAhDSACIAogCyAFGyIHNgIAIAIgCSAIIAwgDUoiBRsoAgA2AgQgAiAIIAkgBRsoAgA2AgggAkEMaiIKIAYgAyAEGygCACIGNgIAIABBEGoiAyAAKAIUIgUgACgCECIISEECdGoiCSADQQxBCCAAKAIcIAAoAhhIIgsbaiIEIAMgBSAITkECdGoiACADQQhBDCALG2oiBSgCACAAKAIASCIIGyAEKAIAIgsgCSgCACIMSCIDGyIJKAIAIQ0gBSAAIAQgAxsgCBsiBCgCACEOIAJBEGoiDyALIAwgAxsiAzYCACACQRRqIAQgCSANIA5KIgsbKAIANgIAIAJBGGogCSAEIAsbKAIANgIAIAJBHGoiCSAAIAUgCBsoAgAiADYCACABIAMgByADIAdIIgQbNgIAIAEgACAGIAAgBkobNgIcIAEgDyAEQQJ0aiIFKAIAIgQgAiADIAdOQQJ0aiIIKAIAIgcgBCAHSCIDGzYCBCABIAlBfEEAIAAgBk4baiIJKAIAIgIgCkF8QQAgACAGSBtqIgooAgAiACAAIAJIGzYCGCABIAUgA0ECdGoiBSgCACIDIAggBCAHTkECdGoiBCgCACIHIAMgB0giCBs2AgggASAJQXxBACAAIAJMG2oiCSgCACIGIApBfEEAIAAgAkobaiIKKAIAIgAgACAGSBs2AhQgASAFIAhBAnRqIgUoAgAiAiAEIAMgB05BAnRqIgMoAgAiByACIAdIIgQbNgIMIAEgCUF8QQAgACAGTBtqIggoAgAiASAKQXxBACAAIAZKG2oiBigCACIAIAAgAUgbNgIQAkAgAyACIAdOQQJ0aiAGQXxBACAAIAFKG2pBBGpGBEAgBSAEQQJ0aiAIQXxBACAAIAFMG2pBBGpGDQELEDAACwuCBgEVfyMAQTBrIgckACACBEADQCALQQN0IQUgC0EBaiELAkAgASAFaiIGKAIAIgUgBigCBCIPRgRAIAdBCGoiCiAFQQhqKQIANwMAIAcgBSkCADcDACAFKAIUIQkgBSgCECEIIAAoAggiBiAAKAIARgRAIAAQFgsgACgCBCAGQRhsaiIFIAcpAwA3AgAgBSAJNgIUIAUgCDYCECAFQQhqIAopAwA3AgAgACAGQQFqNgIIDAELIAdBGGoiFCADIAUgBBsiBkEIaikCADcDACAHIAYpAgA3AxBBACEMIAEgC0EAIAIgC0cbQQN0aigCACERIAVBEGooAgAhBiAPQRBqIhUoAgAhEEEUIQkgBUEUaigCACEIIA9BFGooAgAhDiAHQQA2AiwgB0KAgICAwAA3AiQgECAGayIFIAVBH3UiBXMgBWsiEiAOIAhrIgUgBUEfdSIFcyAFayITayENQQAgE2shFkEBQX8gCCAOSBshF0EBQX8gBiAQSBshGEEAIQUDQCAFIAxGBEAgB0EkahAWCyAHKAIoIAlqIgogCDYCACAKQRRrIgwgBykDEDcCACAKQQRrIAY2AgAgDEEIaiAUKQMANwIAIAcgBUEBaiIKNgIsAkAgBiAQRiIZIAggDkZxDQAgFiANQQF0IgxMBEAgGQ0BIA0gE2shDSAGIBhqIQYLIAwgEkwEQCAIIA5GDQEgDSASaiENIAggF2ohCAsgCUEYaiEJIAcoAiQhDCAKIQUMAQsLIAcoAighCiAHKAIkIQgCQAJAIBEoAhAgFSgCAEcgBUEBaiIGQQJJckUEQCARKAIUIA9BFGooAgBGDQELIAAoAgAgACgCCCIJayAGTw0BIAAgCSAGEBUgACgCCCEJDAELIAUgACgCACAAKAIIIglrTQRAIAUhBgwBCyAAIAkgBRAVIAAoAgghCSAFIQYLIAAoAgQgCUEYbGogCiAGQRhsEEYaIAAgACgCCCAGajYCCCAIRQ0AIAogCEEYbBA9CyACIAtHDQALCyAHQTBqJAAL/QUBBX8gAEEIayIBIABBBGsoAgAiA0F4cSIAaiECAkACQCADQQFxDQAgA0ECcUUNASABKAIAIgMgAGohACABIANrIgFByJHAACgCAEYEQCACKAIEQQNxQQNHDQFBwJHAACAANgIAIAIgAigCBEF+cTYCBCABIABBAXI2AgQgAiAANgIADwsgASADEA4LAkACQAJAAkACQCACKAIEIgNBAnFFBEAgAkHMkcAAKAIARg0CIAJByJHAACgCAEYNAyACIANBeHEiAhAOIAEgACACaiIAQQFyNgIEIAAgAWogADYCACABQciRwAAoAgBHDQFBwJHAACAANgIADwsgAiADQX5xNgIEIAEgAEEBcjYCBCAAIAFqIAA2AgALIABBgAJJDQIgASAAEBBBACEBQeCRwABB4JHAACgCAEEBayIANgIAIAANBEGoj8AAKAIAIgAEQANAIAFBAWohASAAKAIIIgANAAsLQeCRwABB/x8gASABQf8fTRs2AgAPC0HMkcAAIAE2AgBBxJHAAEHEkcAAKAIAIABqIgA2AgAgASAAQQFyNgIEQciRwAAoAgAgAUYEQEHAkcAAQQA2AgBByJHAAEEANgIACyAAQdiRwAAoAgAiA00NA0HMkcAAKAIAIgJFDQNBACEAQcSRwAAoAgAiBEEpSQ0CQaCPwAAhAQNAIAIgASgCACIFTwRAIAIgBSABKAIEakkNBAsgASgCCCEBDAALAAtByJHAACABNgIAQcCRwABBwJHAACgCACAAaiIANgIAIAEgAEEBcjYCBCAAIAFqIAA2AgAPCyAAQXhxQbCPwABqIQICf0G4kcAAKAIAIgNBASAAQQN2dCIAcUUEQEG4kcAAIAAgA3I2AgAgAgwBCyACKAIICyEAIAIgATYCCCAAIAE2AgwgASACNgIMIAEgADYCCA8LQaiPwAAoAgAiAQRAA0AgAEEBaiEAIAEoAggiAQ0ACwtB4JHAAEH/HyAAIABB/x9NGzYCACADIARPDQBB2JHAAEF/NgIACwvuBAEKfyMAQTBrIgMkACADQQM6ACwgA0EgNgIcIANBADYCKCADIAE2AiQgAyAANgIgIANBADYCFCADQQA2AgwCfwJAAkACQCACKAIQIgpFBEAgAigCDCIARQ0BIAIoAgghASAAQQN0IQUgAEEBa0H/////AXFBAWohByACKAIAIQADQCAAQQRqKAIAIgQEQCADKAIgIAAoAgAgBCADKAIkKAIMEQIADQQLIAEoAgAgA0EMaiABKAIEEQEADQMgAUEIaiEBIABBCGohACAFQQhrIgUNAAsMAQsgAigCFCIARQ0AIABBBXQhCyAAQQFrQf///z9xQQFqIQcgAigCCCEIIAIoAgAhAANAIABBBGooAgAiAQRAIAMoAiAgACgCACABIAMoAiQoAgwRAgANAwsgAyAFIApqIgFBEGooAgA2AhwgAyABQRxqLQAAOgAsIAMgAUEYaigCADYCKCABQQxqKAIAIQRBACEJQQAhBgJAAkACQCABQQhqKAIAQQFrDgIAAgELIARBA3QgCGoiDCgCBA0BIAwoAgAhBAtBASEGCyADIAQ2AhAgAyAGNgIMIAFBBGooAgAhBAJAAkACQCABKAIAQQFrDgIAAgELIARBA3QgCGoiBigCBA0BIAYoAgAhBAtBASEJCyADIAQ2AhggAyAJNgIUIAggAUEUaigCAEEDdGoiASgCACADQQxqIAEoAgQRAQANAiAAQQhqIQAgCyAFQSBqIgVHDQALCyAHIAIoAgRPDQEgAygCICACKAIAIAdBA3RqIgAoAgAgACgCBCADKAIkKAIMEQIARQ0BC0EBDAELQQALIANBMGokAAujBAEFfyMAQUBqIgMkAAJAAkAgACABbCICQQJ0IgRFBEBBBCEFDAELQQQhBiACQQR0IQIgBEH/////AUsEQEEAIQYMAgtB6Y3AAC0AABogAkEEEDgiBUUNASAFQf8BIAJBBGsiAhBFIAJqQX82AgALIANBOGpCfzcCACADQTBqQn83AgAgA0EoakJ/NwIAIANBIGpCfzcCACADQRhqQn83AgAgA0J/NwIQQemNwAAtAAAaQcgBQQgQOCICRQRAQQhByAEQRAALIAJBADYCACACIAMpAgw3AgQgAkIANwNAIAJCgICAgICAgPg/NwM4IAJByABqQgA3AwAgAkHQAGpCADcDACACQQxqIANBFGopAgA3AgAgAkEUaiADQRxqKQIANwIAIAJBHGogA0EkaikCADcCACACQSRqIANBLGopAgA3AgAgAkEsaiADQTRqKQIANwIAIAJBNGogA0E8aigCADYCACACQgA3A2AgAkKAgICAgICA+D83A1ggAkHoAGpCADcDACACQfAAakIANwMAIAJCgICAgICAgPg/NwN4IAJCADcDgAEgAkGIAWpCADcDACACQZABakIANwMAIAIgADYCmAEgAiABNgKcASACIAQ2AqABIAIgBTYCpAEgAiAENgKoASACQQE7AcQBIAJCgICAgIABNwKsASACQgA3ArQBIAJCCDcCvAEgAkEAOgDGASADQUBrJAAgAg8LIAYgAhA2AAv4AwECfyAAIAFqIQICQAJAIAAoAgQiA0EBcQ0AIANBAnFFDQEgACgCACIDIAFqIQEgACADayIA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ASAEQQRqIgQgAkkNAAsMAQsgB0EATA0AIAYhAQNAIAQgASgCADYCACABQQRqIQEgBEEEaiIEIAJJDQALCyAGIAdqIQEgCUEDcSIDRQ0CIAIgA2ohAwNAIAIgAS0AADoAACABQQFqIQEgAkEBaiICIANJDQALDAILIAlBA3EiAUUNASAFIAdrIQUgAiABawshAyAFQQFrIQEDQCACQQFrIgIgAS0AADoAACABQQFrIQEgAiADSw0ACwsLIABBADYCAA8LEEAACxBBAAu0AgEDfyMAQSBrIgIkACACQRBqIgMgAEEQaikCADcDACACQQhqIgQgAEEIaikCADcDACACQQE7ARwgAiABNgIYIAIgACkCADcDACMAQSBrIgAkACACKAIYIQEgAEEQaiADKQIANwMAIABBCGogBCkCADcDACAAIAI2AhwgACABNgIYIAAgAikCADcDAEEAIQIjAEEQayIBJAAgACgCDCEDAkACQAJAAkAgACgCBA4CAAECCyADDQFBASEDDAILIAMNACAAKAIAIgMoAgQhAiADKAIAIQMMAQsgAUGAgICAeDYCACABIAA2AgwgAUHEhsAAIAAoAhggACgCHCIALQAcIAAtAB0QFAALIAEgAjYCBCABIAM2AgAgAUGohsAAIAAoAhggACgCHCIALQAcIAAtAB0QFAALTQECf0HpjcAALQAAGiABKAIEIQIgASgCACEDQQhBBBA4IgEEQCABIAI2AgQgASADNgIAIABBmIbAADYCBCAAIAE2AgAPC0EEQQgQRAALQwACQCAABEAgACgCAA0BIAAgBDYCFCAAIAM2AhAgACACNgIMIAAgATYCCCAAQQE6AMQBIABBADYCAA8LEEAACxBBAAtDAAJAIAAEQCAAKAIADQEgACAENgIkIAAgAzYCICAAIAI2AhwgACABNgIYIABBAToAxQEgAEEANgIADwsQQAALEEEAC0MAAkAgAARAIAAoAgANASAAIAQ2AjQgACADNgIwIAAgAjYCLCAAIAE2AiggAEEBOgDGASAAQQA2AgAPCxBAAAsQQQALQQEBfyACIAAoAgAgACgCCCIDa0sEQCAAIAMgAhAZIAAoAgghAwsgACgCBCADaiABIAIQRhogACACIANqNgIIQQALQQEBfyMAQSBrIgIkACACQQA2AhAgAkEBNgIEIAJCBDcCCCACQS42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BE0bIg5BA3QhESABIAUEfyABIAVBA3Q2AhwgASAGKAIENgIUQQQFQQALNgIYIAFBCGogDUGAgICAAUlBAnQgESABQRRqEBwgASgCCARAIAEoAgwgASgCEBA2AAsgASgCDCEFIAYgDjYCACAGIAU2AgQgAUEgaiQACyADKAIIIAhqIgEgDzYCACABQQRrIAk2AgAgAyACNgIMIAlBGGohCSAIQQhqIQggAiIBIAtHDQALCyAQIAMpAgQ3AgAgEEEIaiADQQxqKAIANgIADAILQemNwAAtAAAaIAIoAgQhAkEIQQQQOCIBBEAgASACNgIEIAEgAjYCACAQQQE2AgggECABNgIEIBBBATYCAAwCC0EEQQgQRAALIAEgBEGQgMAAECMACyADQRBqJAAgB0HIAGoiGiAMQdAAaikCADcDACAHIAwpAkg3A0AgB0FAayEWIAwtAGUgDC0AZiEBIwBBMGsiBSQAIAVBADYCFCAFQoCAgIDAADcCDAJAIAFFDQAgBUEMaiAQKAIEIBAoAgggFkEBEAcCfyAFKAIUIgFFBEBB/////wchDUGBgICAeAwBCyAFKAIQIQQgAUEYbEEYayIBQRhuQQFqIgJBA3EhCwJAIAFByABJBEBBgICAgHghAUH/////ByENDAELIAJB/P///wFxIQNBgICAgHghAUH/////ByENA0AgASAEKAIUIgIgASACShsiASAEQSxqKAIAIgYgASAGShsiASAEQcQAaigCACIIIAEgCEobIgEgBEHcAGooAgAiCSABIAlKGyEBIA0gAiACIA1KGyICIAYgAiAGSBsiAiAIIAIgCEgbIgIgCSACIAlIGyENIARB4ABqIQQgA0EEayIDDQALCyALBEAgC0EYbCECIARBFGohBgNAIAEgBigCACIDIAEgA0obIQEgDSADIAMgDUobIQ0gBkEYaiEGIAJBGGsiAg0ACwsgAUEBagshAiAFQQA2AiwgBUKAgICAwAA3AiQgBUEYaiERIAVBJGohCEEAIQFBACEGAkACQAJAAkACQAJAIAIgDWsiAwRAIANBDGwiBEEASCADQarVqtUAS3INA0HpjcAALQAAGkEEIQEgBEEEEDgiAkUNAyACIQEgA0EBRw0BDAULIAgoAgAiBA0BQQQhAgwFCyAIKAIIIg9BAnQhBCAIKAIEIQ4gD0UEQCADQQFrIgZB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IAFBkIHAABAjAAsgBygCMCIBBEAgBygCNCABQQJ0ED0LIAcoAiQiAQRAIAcoAiggAUEYbBA9CyAHKAIYIgEEQCAHKAIcIAFBA3QQPQsgBygCCCIBBEAgBygCDCABQRhsED0LIAxB6ABqIgwgGEcNAAsgCkEBOwG8ASAKQQA6AL4BIApBADYCrAEgEkHcAGohAQNAIAFBBGsoAgAiAgRAIAEoAgAgAkEFdBA9CyABQegAaiEBIBNBAWsiEw0ACwwBCyAKQQE7AbwBIApBADoAvgEgCkEANgKsAQsgCkIANwM4IApCgICAgICAgPg/NwMwIApBADYCuAEgCkIANwNYIApCgICAgICAgPg/NwNQIApCgICAgICAgPg/NwNwIApBQGtCADcDACAKQcgAakIANwMAIApB4ABqQgA3AwAgCkHoAGpCADcDACAKKAKcASAHQdAAaiQAIABBADYCAA8LEEAACxBBAAs5AQF/IwBBIGsiACQAIABBADYCGCAAQQE2AgwgAEGAisAANgIIIABCBDcCECAAQQhqQbiKwAAQJgALJwACQCAABEAgACgCAA0BIABBADYCACAAQQA6AMQBDwsQQAALEEEACycAAkAgAARAIAAoAgANASAAQQA2AgAgAEEAOgDFAQ8LEEAACxBBAAslAQF/IAAoAgAiAUGAgICAeHJBgICAgHhHBEAgACgCBCABED0LCxcBAX8gACgCACIBBEAgACgCBCABED0LCyEAIAC9QoCAgICAgICAgH+DQv/////////vP4S/IACgnQtEACAARQRAIwBBIGsiACQAIABBADYCGCAAQQE2AgwgAEH0hsAANgIIIABCBDcCECAAQQhqQZiHwAAQJgALIAAgARBEAAsWACAAKAIUIAEgAiAAKAIYKAIMEQIACxkAAn8gAUEJTwRAIAEgABAMDAELIAAQAQsLIQAgAEL0hfedscvUr8MANwMIIABCnLu2xIvN/69mNwMACyIAIABC7bqtts2F1PXjADcDCCAAQviCmb2V7sbFuX83AwALEwAgAEGYhsAANgIEIAAgATYCAAsQACABIAAoAgAgACgCBBA3C1sBAn8CQAJAIABBBGsoAgAiAkF4cSIDQQRBCCACQQNxIgIbIAFqTwRAIAJBACADIAFBJ2pLGw0BIAAQCAwCC0GthMAAQdyEwAAQLAALQeyEwABB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', imports)}

  async function context_init(options = {}) {
    const module = await __wbg_init(typeof wasm === "function" ? await wasm() : undefined);
    const {memory} = module;
    const terminal = new Terminal(options);
    const renderer = Renderer.new(terminal._cols, terminal._rows);
    this._memory = memory;
    this._terminal = terminal;
    this._renderer = renderer;
    this._terminal.background("#000");
  }

  const NULL_VALUE = 0xffffffff;

  const CELL_SIZE = 4;

  function decodeColor(color) {
    if (color === NULL_VALUE) return undefined;
    const r = (color & 0xff0000) >> 16;
    const g = (color & 0x00ff00) >> 8;
    const b = color & 0x0000ff;
    return `rgb(${r}, ${g}, ${b})`;
  }

  function decodeChar(n) {
    if (n === NULL_VALUE) return ["", 0];
    const first = n >> 31;
    const n1 = n & 0x0fffffff;
    const w = first === 0 ? 1 : 2;
    return [String.fromCodePoint(n1), w];
  }

  function draw() {
    const bufferPtr = this._renderer.render();
    const buffer = new Uint32Array(this._memory.buffer, bufferPtr, this.cols() * this.rows() * CELL_SIZE);
    for (let i = 0; i < this.rows(); i++) {
      for (let j = 0; j < this.cols(); j++) {
        const index = (this.cols() * i + j) * CELL_SIZE;
        const [ch, wch] = decodeChar(buffer[index]);
        const [ch1, wch1] = decodeChar(buffer[index + 1]);
        const fg = decodeColor(buffer[index + 2]);
        const bg = decodeColor(buffer[index + 3]);
        const wide = wch + wch1 >= 2;
        const ch2 = ch + ch1;
        if (ch2 || fg) this._terminal.char(ch2, j, i, fg, bg, wide);
      }
    }
  }

  function context_run() {
    this._setup?.(this);
    draw.call(this);
    return this._terminal.node();
  }

  function define(constructor, factory, prototype) {
    constructor.prototype = factory.prototype = prototype;
    prototype.constructor = constructor;
  }

  function extend(parent, definition) {
    var prototype = Object.create(parent.prototype);
    for (var key in definition) prototype[key] = definition[key];
    return prototype;
  }

  function Color() {}

  var darker = 0.7;
  var brighter = 1 / darker;

  var reI = "\\s*([+-]?\\d+)\\s*",
      reN = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)\\s*",
      reP = "\\s*([+-]?(?:\\d*\\.)?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
      reHex = /^#([0-9a-f]{3,8})$/,
      reRgbInteger = new RegExp(`^rgb\\(${reI},${reI},${reI}\\)$`),
      reRgbPercent = new RegExp(`^rgb\\(${reP},${reP},${reP}\\)$`),
      reRgbaInteger = new RegExp(`^rgba\\(${reI},${reI},${reI},${reN}\\)$`),
      reRgbaPercent = new RegExp(`^rgba\\(${reP},${reP},${reP},${reN}\\)$`),
      reHslPercent = new RegExp(`^hsl\\(${reN},${reP},${reP}\\)$`),
      reHslaPercent = new RegExp(`^hsla\\(${reN},${reP},${reP},${reN}\\)$`);

  var named = {
    aliceblue: 0xf0f8ff,
    antiquewhite: 0xfaebd7,
    aqua: 0x00ffff,
    aquamarine: 0x7fffd4,
    azure: 0xf0ffff,
    beige: 0xf5f5dc,
    bisque: 0xffe4c4,
    black: 0x000000,
    blanchedalmond: 0xffebcd,
    blue: 0x0000ff,
    blueviolet: 0x8a2be2,
    brown: 0xa52a2a,
    burlywood: 0xdeb887,
    cadetblue: 0x5f9ea0,
    chartreuse: 0x7fff00,
    chocolate: 0xd2691e,
    coral: 0xff7f50,
    cornflowerblue: 0x6495ed,
    cornsilk: 0xfff8dc,
    crimson: 0xdc143c,
    cyan: 0x00ffff,
    darkblue: 0x00008b,
    darkcyan: 0x008b8b,
    darkgoldenrod: 0xb8860b,
    darkgray: 0xa9a9a9,
    darkgreen: 0x006400,
    darkgrey: 0xa9a9a9,
    darkkhaki: 0xbdb76b,
    darkmagenta: 0x8b008b,
    darkolivegreen: 0x556b2f,
    darkorange: 0xff8c00,
    darkorchid: 0x9932cc,
    darkred: 0x8b0000,
    darksalmon: 0xe9967a,
    darkseagreen: 0x8fbc8f,
    darkslateblue: 0x483d8b,
    darkslategray: 0x2f4f4f,
    darkslategrey: 0x2f4f4f,
    darkturquoise: 0x00ced1,
    darkviolet: 0x9400d3,
    deeppink: 0xff1493,
    deepskyblue: 0x00bfff,
    dimgray: 0x696969,
    dimgrey: 0x696969,
    dodgerblue: 0x1e90ff,
    firebrick: 0xb22222,
    floralwhite: 0xfffaf0,
    forestgreen: 0x228b22,
    fuchsia: 0xff00ff,
    gainsboro: 0xdcdcdc,
    ghostwhite: 0xf8f8ff,
    gold: 0xffd700,
    goldenrod: 0xdaa520,
    gray: 0x808080,
    green: 0x008000,
    greenyellow: 0xadff2f,
    grey: 0x808080,
    honeydew: 0xf0fff0,
    hotpink: 0xff69b4,
    indianred: 0xcd5c5c,
    indigo: 0x4b0082,
    ivory: 0xfffff0,
    khaki: 0xf0e68c,
    lavender: 0xe6e6fa,
    lavenderblush: 0xfff0f5,
    lawngreen: 0x7cfc00,
    lemonchiffon: 0xfffacd,
    lightblue: 0xadd8e6,
    lightcoral: 0xf08080,
    lightcyan: 0xe0ffff,
    lightgoldenrodyellow: 0xfafad2,
    lightgray: 0xd3d3d3,
    lightgreen: 0x90ee90,
    lightgrey: 0xd3d3d3,
    lightpink: 0xffb6c1,
    lightsalmon: 0xffa07a,
    lightseagreen: 0x20b2aa,
    lightskyblue: 0x87cefa,
    lightslategray: 0x778899,
    lightslategrey: 0x778899,
    lightsteelblue: 0xb0c4de,
    lightyellow: 0xffffe0,
    lime: 0x00ff00,
    limegreen: 0x32cd32,
    linen: 0xfaf0e6,
    magenta: 0xff00ff,
    maroon: 0x800000,
    mediumaquamarine: 0x66cdaa,
    mediumblue: 0x0000cd,
    mediumorchid: 0xba55d3,
    mediumpurple: 0x9370db,
    mediumseagreen: 0x3cb371,
    mediumslateblue: 0x7b68ee,
    mediumspringgreen: 0x00fa9a,
    mediumturquoise: 0x48d1cc,
    mediumvioletred: 0xc71585,
    midnightblue: 0x191970,
    mintcream: 0xf5fffa,
    mistyrose: 0xffe4e1,
    moccasin: 0xffe4b5,
    navajowhite: 0xffdead,
    navy: 0x000080,
    oldlace: 0xfdf5e6,
    olive: 0x808000,
    olivedrab: 0x6b8e23,
    orange: 0xffa500,
    orangered: 0xff4500,
    orchid: 0xda70d6,
    palegoldenrod: 0xeee8aa,
    palegreen: 0x98fb98,
    paleturquoise: 0xafeeee,
    palevioletred: 0xdb7093,
    papayawhip: 0xffefd5,
    peachpuff: 0xffdab9,
    peru: 0xcd853f,
    pink: 0xffc0cb,
    plum: 0xdda0dd,
    powderblue: 0xb0e0e6,
    purple: 0x800080,
    rebeccapurple: 0x663399,
    red: 0xff0000,
    rosybrown: 0xbc8f8f,
    royalblue: 0x4169e1,
    saddlebrown: 0x8b4513,
    salmon: 0xfa8072,
    sandybrown: 0xf4a460,
    seagreen: 0x2e8b57,
    seashell: 0xfff5ee,
    sienna: 0xa0522d,
    silver: 0xc0c0c0,
    skyblue: 0x87ceeb,
    slateblue: 0x6a5acd,
    slategray: 0x708090,
    slategrey: 0x708090,
    snow: 0xfffafa,
    springgreen: 0x00ff7f,
    steelblue: 0x4682b4,
    tan: 0xd2b48c,
    teal: 0x008080,
    thistle: 0xd8bfd8,
    tomato: 0xff6347,
    turquoise: 0x40e0d0,
    violet: 0xee82ee,
    wheat: 0xf5deb3,
    white: 0xffffff,
    whitesmoke: 0xf5f5f5,
    yellow: 0xffff00,
    yellowgreen: 0x9acd32
  };

  define(Color, color, {
    copy(channels) {
      return Object.assign(new this.constructor, this, channels);
    },
    displayable() {
      return this.rgb().displayable();
    },
    hex: color_formatHex, // Deprecated! Use color.formatHex.
    formatHex: color_formatHex,
    formatHex8: color_formatHex8,
    formatHsl: color_formatHsl,
    formatRgb: color_formatRgb,
    toString: color_formatRgb
  });

  function color_formatHex() {
    return this.rgb().formatHex();
  }

  function color_formatHex8() {
    return this.rgb().formatHex8();
  }

  function color_formatHsl() {
    return hslConvert(this).formatHsl();
  }

  function color_formatRgb() {
    return this.rgb().formatRgb();
  }

  function color(format) {
    var m, l;
    format = (format + "").trim().toLowerCase();
    return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
        : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00
        : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
        : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000
        : null) // invalid hex
        : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
        : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
        : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
        : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
        : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
        : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
        : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
        : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0)
        : null;
  }

  function rgbn(n) {
    return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
  }

  function rgba(r, g, b, a) {
    if (a <= 0) r = g = b = NaN;
    return new Rgb(r, g, b, a);
  }

  function rgbConvert(o) {
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Rgb;
    o = o.rgb();
    return new Rgb(o.r, o.g, o.b, o.opacity);
  }

  function rgb(r, g, b, opacity) {
    return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
  }

  function Rgb(r, g, b, opacity) {
    this.r = +r;
    this.g = +g;
    this.b = +b;
    this.opacity = +opacity;
  }

  define(Rgb, rgb, extend(Color, {
    brighter(k) {
      k = k == null ? brighter : Math.pow(brighter, k);
      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    darker(k) {
      k = k == null ? darker : Math.pow(darker, k);
      return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
    },
    rgb() {
      return this;
    },
    clamp() {
      return new Rgb(clampi(this.r), clampi(this.g), clampi(this.b), clampa(this.opacity));
    },
    displayable() {
      return (-0.5 <= this.r && this.r < 255.5)
          && (-0.5 <= this.g && this.g < 255.5)
          && (-0.5 <= this.b && this.b < 255.5)
          && (0 <= this.opacity && this.opacity <= 1);
    },
    hex: rgb_formatHex, // Deprecated! Use color.formatHex.
    formatHex: rgb_formatHex,
    formatHex8: rgb_formatHex8,
    formatRgb: rgb_formatRgb,
    toString: rgb_formatRgb
  }));

  function rgb_formatHex() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}`;
  }

  function rgb_formatHex8() {
    return `#${hex(this.r)}${hex(this.g)}${hex(this.b)}${hex((isNaN(this.opacity) ? 1 : this.opacity) * 255)}`;
  }

  function rgb_formatRgb() {
    const a = clampa(this.opacity);
    return `${a === 1 ? "rgb(" : "rgba("}${clampi(this.r)}, ${clampi(this.g)}, ${clampi(this.b)}${a === 1 ? ")" : `, ${a})`}`;
  }

  function clampa(opacity) {
    return isNaN(opacity) ? 1 : Math.max(0, Math.min(1, opacity));
  }

  function clampi(value) {
    return Math.max(0, Math.min(255, Math.round(value) || 0));
  }

  function hex(value) {
    value = clampi(value);
    return (value < 16 ? "0" : "") + value.toString(16);
  }

  function hsla(h, s, l, a) {
    if (a <= 0) h = s = l = NaN;
    else if (l <= 0 || l >= 1) h = s = NaN;
    else if (s <= 0) h = NaN;
    return new Hsl(h, s, l, a);
  }

  function hslConvert(o) {
    if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
    if (!(o instanceof Color)) o = color(o);
    if (!o) return new Hsl;
    if (o instanceof Hsl) return o;
    o = o.rgb();
    var r = o.r / 255,
        g = o.g / 255,
        b = o.b / 255,
        min = Math.min(r, g, b),
        max = Math.max(r, g, b),
        h = NaN,
        s = max - min,
        l = (max + min) / 2;
    if (s) {
      if (r === max) h = (g - b) / s + (g < b) * 6;
      else if (g === max) h = (b - r) / s + 2;
      else h = (r - g) / s + 4;
      s /= l < 0.5 ? max + min : 2 - max - min;
      h *= 60;
    } else {
      s = l > 0 && l < 1 ? 0 : h;
    }
    return new Hsl(h, s, l, o.opacity);
  }

  function hsl(h, s, l, opacity) {
    return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
  }

  function Hsl(h, s, l, opacity) {
    this.h = +h;
    this.s = +s;
    this.l = +l;
    this.opacity = +opacity;
  }

  define(Hsl, hsl, extend(Color, {
    brighter(k) {
      k = k == null ? brighter : Math.pow(brighter, k);
      return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    darker(k) {
      k = k == null ? darker : Math.pow(darker, k);
      return new Hsl(this.h, this.s, this.l * k, this.opacity);
    },
    rgb() {
      var h = this.h % 360 + (this.h < 0) * 360,
          s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
          l = this.l,
          m2 = l + (l < 0.5 ? l : 1 - l) * s,
          m1 = 2 * l - m2;
      return new Rgb(
        hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),
        hsl2rgb(h, m1, m2),
        hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),
        this.opacity
      );
    },
    clamp() {
      return new Hsl(clamph(this.h), clampt(this.s), clampt(this.l), clampa(this.opacity));
    },
    displayable() {
      return (0 <= this.s && this.s <= 1 || isNaN(this.s))
          && (0 <= this.l && this.l <= 1)
          && (0 <= this.opacity && this.opacity <= 1);
    },
    formatHsl() {
      const a = clampa(this.opacity);
      return `${a === 1 ? "hsl(" : "hsla("}${clamph(this.h)}, ${clampt(this.s) * 100}%, ${clampt(this.l) * 100}%${a === 1 ? ")" : `, ${a})`}`;
    }
  }));

  function clamph(value) {
    value = (value || 0) % 360;
    return value < 0 ? value + 360 : value;
  }

  function clampt(value) {
    return Math.max(0, Math.min(1, value || 0));
  }

  /* From FvD 13.37, CSS Color Module Level 3 */
  function hsl2rgb(h, m1, m2) {
    return (h < 60 ? m1 + (m2 - m1) * h / 60
        : h < 180 ? m2
        : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60
        : m1) * 255;
  }

  function encodeColor(color$1) {
    if (color$1 === NULL_VALUE || color$1 === null) return NULL_VALUE;
    const {r, g, b} = color(color$1);
    return b + (g << 8) + (r << 16);
  }

  function encodeChar(ch) {
    if (Array.isArray(ch)) return ch;
    return Array.from(ch)
      .slice(0, 2)
      .map((ch) => ch.codePointAt(0));
  }

  function context_stroke(ch, fg = "#ffffff", bg = null) {
    const [n, n1 = NULL_VALUE] = encodeChar(ch);
    this._renderer.stroke(n, n1, encodeColor(fg), encodeColor(bg));
    return this;
  }

  function context_point(x, y) {
    this._renderer.point(x, y);
    return this;
  }

  function context_setup(hook) {
    this._setup = hook;
  }

  function context_rows() {
    return this._terminal._rows;
  }

  function context_cols() {
    return this._terminal._cols;
  }

  function context_node() {
    return this._terminal.node();
  }

  function Context() {
    Object.defineProperties(this, {
      _memory: {value: null, writable: true},
      _terminal: {value: null, writable: true},
      _renderer: {value: null, writable: true},
      _setup: {value: null, writable: true},
    });
  }

  Object.defineProperties(Context.prototype, {
    setup: {value: context_setup, writable: true, configurable: true},
    init: {value: context_init, writable: true, configurable: true},
    run: {value: context_run, writable: true, configurable: true},
    stroke: {value: context_stroke, writable: true, configurable: true},
    point: {value: context_point, writable: true, configurable: true},
    rows: {value: context_rows, writable: true, configurable: true},
    cols: {value: context_cols, writable: true, configurable: true},
    node: {value: context_node, writable: true, configurable: true},
  });

  async function cell(App) {
    const ctx = new Context();
    const {setup, ...options} = App(ctx);
    await ctx.init(options);
    ctx.setup(setup);
    ctx.run();
    return ctx.node();
  }

  function wide(string) {
    const code = string.codePointAt(0);
    return [code + 0xf0000000, NULL_VALUE];
  }

  function lodash() {}

  function context2d(width = 640, height = 480, dpr = null) {
    if (dpr == null) dpr = devicePixelRatio;
    const canvas = document.createElement("canvas");
    canvas.width = width * dpr;
    canvas.height = height * dpr;
    canvas.style.width = width + "px";
    canvas.style.height = height + "px";
    const context = canvas.getContext("2d");
    context.scale(dpr, dpr);
    return context;
  }

  function render({width = 640, height = 480, init} = {}) {
    const context = context2d(width, height);
    init(context);
    return context.canvas;
  }

  function flow(...transforms) {
    return (context) => {
      let data;
      for (const transform of transforms) {
        data = transform(data);
      }
      const {transform, I, ...value} = data;
      transform(I, value, context);
    };
  }

  function range(count) {
    return () => Array.from({length: count}, (_, i) => i);
  }

  function map(callback) {
    return (data) => data.map(callback);
  }

  function attribute(value, datum) {
    if (typeof value === "function") return value(datum);
    return value;
  }

  function circle({x, y, fill, r}) {
    return (data) => {
      const I = Array.from({length: data.length}, (_, i) => i);
      const X = I.map((i) => attribute(x, data[i]));
      const Y = I.map((i) => attribute(y, data[i]));
      const R = I.map((i) => attribute(r, data[i]));
      const F = I.map((i) => attribute(fill, data[i]));
      const transform = (I, value, context) => {
        const {x: X, y: Y, r: R, fill: F} = value;
        for (const i of I) {
          context.beginPath();
          context.arc(X[i], Y[i], R[i], 0, 2 * Math.PI);
          context.fillStyle = F[i];
          context.fill();
        }
      };
      return {x: X, y: Y, r: R, fill: F, I, transform};
    };
  }

  exports.cell = cell;
  exports.circle = circle;
  exports.flow = flow;
  exports.lodash = lodash;
  exports.map = map;
  exports.range = range;
  exports.render = render;
  exports.wide = wide;

}));
